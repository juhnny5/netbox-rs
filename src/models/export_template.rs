/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ExportTemplate : Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportTemplate {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "content_types")]
    pub content_types: Vec<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Jinja2 template code. The list of objects being exported is passed as a context variable named <code>queryset</code>.
    #[serde(rename = "template_code")]
    pub template_code: String,
    /// Defaults to <code>text/plain; charset=utf-8</code>
    #[serde(rename = "mime_type", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<String>,
    /// Extension to append to the rendered filename
    #[serde(rename = "file_extension", skip_serializing_if = "Option::is_none")]
    pub file_extension: Option<String>,
    /// Download file as attachment
    #[serde(rename = "as_attachment", skip_serializing_if = "Option::is_none")]
    pub as_attachment: Option<bool>,
    #[serde(rename = "data_source", skip_serializing_if = "Option::is_none")]
    pub data_source: Option<Box<crate::models::NestedDataSource>>,
    /// Path to remote file (relative to data source root)
    #[serde(rename = "data_path")]
    pub data_path: String,
    #[serde(rename = "data_file")]
    pub data_file: Box<crate::models::NestedDataFile>,
    #[serde(rename = "data_synced", deserialize_with = "Option::deserialize")]
    pub data_synced: Option<String>,
    #[serde(rename = "created", deserialize_with = "Option::deserialize")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", deserialize_with = "Option::deserialize")]
    pub last_updated: Option<String>,
}

impl ExportTemplate {
    /// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
    pub fn new(id: i32, url: String, display: String, content_types: Vec<String>, name: String, template_code: String, data_path: String, data_file: crate::models::NestedDataFile, data_synced: Option<String>, created: Option<String>, last_updated: Option<String>) -> ExportTemplate {
        ExportTemplate {
            id,
            url,
            display,
            content_types,
            name,
            description: None,
            template_code,
            mime_type: None,
            file_extension: None,
            as_attachment: None,
            data_source: None,
            data_path,
            data_file: Box::new(data_file),
            data_synced,
            created,
            last_updated,
        }
    }
}


