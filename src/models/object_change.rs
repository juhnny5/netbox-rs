/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ObjectChange {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "time")]
    pub time: String,
    #[serde(rename = "user")]
    pub user: Box<crate::models::NestedUser>,
    #[serde(rename = "user_name")]
    pub user_name: String,
    #[serde(rename = "request_id")]
    pub request_id: uuid::Uuid,
    #[serde(rename = "action")]
    pub action: Box<crate::models::ObjectChangeAction>,
    #[serde(rename = "changed_object_type")]
    pub changed_object_type: String,
    #[serde(rename = "changed_object_id")]
    pub changed_object_id: i64,
    #[serde(rename = "changed_object", deserialize_with = "Option::deserialize")]
    pub changed_object: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "prechange_data", deserialize_with = "Option::deserialize")]
    pub prechange_data: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "postchange_data", deserialize_with = "Option::deserialize")]
    pub postchange_data: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl ObjectChange {
    pub fn new(id: i32, url: String, display: String, time: String, user: crate::models::NestedUser, user_name: String, request_id: uuid::Uuid, action: crate::models::ObjectChangeAction, changed_object_type: String, changed_object_id: i64, changed_object: Option<::std::collections::HashMap<String, serde_json::Value>>, prechange_data: Option<::std::collections::HashMap<String, serde_json::Value>>, postchange_data: Option<::std::collections::HashMap<String, serde_json::Value>>) -> ObjectChange {
        ObjectChange {
            id,
            url,
            display,
            time,
            user: Box::new(user),
            user_name,
            request_id,
            action: Box::new(action),
            changed_object_type,
            changed_object_id,
            changed_object,
            prechange_data,
            postchange_data,
        }
    }
}


