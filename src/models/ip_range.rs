/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IpRange : Adds support for custom fields and tags.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpRange {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "family")]
    pub family: Box<crate::models::AggregateFamily>,
    #[serde(rename = "start_address")]
    pub start_address: String,
    #[serde(rename = "end_address")]
    pub end_address: String,
    #[serde(rename = "size")]
    pub size: i32,
    #[serde(rename = "vrf", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vrf: Option<Option<Box<crate::models::NestedVrf>>>,
    #[serde(rename = "tenant", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<Option<Box<crate::models::NestedTenant>>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::IpRangeStatus>>,
    #[serde(rename = "role", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub role: Option<Option<Box<crate::models::NestedRole>>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::NestedTag>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "created", deserialize_with = "Option::deserialize")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", deserialize_with = "Option::deserialize")]
    pub last_updated: Option<String>,
    /// Treat as 100% utilized
    #[serde(rename = "mark_utilized", skip_serializing_if = "Option::is_none")]
    pub mark_utilized: Option<bool>,
}

impl IpRange {
    /// Adds support for custom fields and tags.
    pub fn new(id: i32, url: String, display: String, family: crate::models::AggregateFamily, start_address: String, end_address: String, size: i32, created: Option<String>, last_updated: Option<String>) -> IpRange {
        IpRange {
            id,
            url,
            display,
            family: Box::new(family),
            start_address,
            end_address,
            size,
            vrf: None,
            tenant: None,
            status: None,
            role: None,
            description: None,
            comments: None,
            tags: None,
            custom_fields: None,
            created,
            last_updated,
            mark_utilized: None,
        }
    }
}


