/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WritablePlatform {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "display", skip_serializing_if = "Option::is_none")]
    pub display: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
    /// Optionally limit this platform to devices of a certain manufacturer
    #[serde(rename = "manufacturer", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub manufacturer: Option<Option<i32>>,
    /// The name of the NAPALM driver to use when interacting with devices
    #[serde(rename = "napalm_driver", skip_serializing_if = "Option::is_none")]
    pub napalm_driver: Option<String>,
    /// Additional arguments to pass when initiating the NAPALM driver (JSON format)
    #[serde(rename = "napalm_args", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub napalm_args: Option<Option<serde_json::Value>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::NestedTag>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
    #[serde(rename = "created", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created: Option<Option<String>>,
    #[serde(rename = "last_updated", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<Option<String>>,
    #[serde(rename = "device_count", skip_serializing_if = "Option::is_none")]
    pub device_count: Option<i32>,
    #[serde(rename = "virtualmachine_count", skip_serializing_if = "Option::is_none")]
    pub virtualmachine_count: Option<i32>,
}

impl WritablePlatform {
    pub fn new(name: String, slug: String) -> WritablePlatform {
        WritablePlatform {
            id: None,
            url: None,
            display: None,
            name,
            slug,
            manufacturer: None,
            napalm_driver: None,
            napalm_args: None,
            description: None,
            tags: None,
            custom_fields: None,
            created: None,
            last_updated: None,
            device_count: None,
            virtualmachine_count: None,
        }
    }
}


