/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomFieldType {
    /// * `text` - Text * `longtext` - Text (long) * `integer` - Integer * `decimal` - Decimal * `boolean` - Boolean (true/false) * `date` - Date * `datetime` - Date & time * `url` - URL * `json` - JSON * `select` - Selection * `multiselect` - Multiple selection * `object` - Object * `multiobject` - Multiple objects
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<Value>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<Label>,
}

impl CustomFieldType {
    pub fn new() -> CustomFieldType {
        CustomFieldType {
            value: None,
            label: None,
        }
    }
}

/// * `text` - Text * `longtext` - Text (long) * `integer` - Integer * `decimal` - Decimal * `boolean` - Boolean (true/false) * `date` - Date * `datetime` - Date & time * `url` - URL * `json` - JSON * `select` - Selection * `multiselect` - Multiple selection * `object` - Object * `multiobject` - Multiple objects
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "text")]
    Text,
    #[serde(rename = "longtext")]
    Longtext,
    #[serde(rename = "integer")]
    Integer,
    #[serde(rename = "decimal")]
    Decimal,
    #[serde(rename = "boolean")]
    Boolean,
    #[serde(rename = "date")]
    Date,
    #[serde(rename = "datetime")]
    Datetime,
    #[serde(rename = "url")]
    Url,
    #[serde(rename = "json")]
    Json,
    #[serde(rename = "select")]
    Select,
    #[serde(rename = "multiselect")]
    Multiselect,
    #[serde(rename = "object")]
    Object,
    #[serde(rename = "multiobject")]
    Multiobject,
}

impl Default for Value {
    fn default() -> Value {
        Self::Text
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Label {
    #[serde(rename = "Text")]
    Text,
    #[serde(rename = "Text (long)")]
    TextLeftParenthesisLongRightParenthesis,
    #[serde(rename = "Integer")]
    Integer,
    #[serde(rename = "Decimal")]
    Decimal,
    #[serde(rename = "Boolean (true/false)")]
    BooleanLeftParenthesisTrueSlashFalseRightParenthesis,
    #[serde(rename = "Date")]
    Date,
    #[serde(rename = "Date & time")]
    DateAmpersandTime,
    #[serde(rename = "URL")]
    Url,
    #[serde(rename = "JSON")]
    Json,
    #[serde(rename = "Selection")]
    Selection,
    #[serde(rename = "Multiple selection")]
    MultipleSelection,
    #[serde(rename = "Object")]
    Object,
    #[serde(rename = "Multiple objects")]
    MultipleObjects,
}

impl Default for Label {
    fn default() -> Label {
        Self::Text
    }
}

