/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Airflow {
    #[serde(rename = "label")]
    pub label: Label,
    #[serde(rename = "value")]
    pub value: Value,
}

impl Airflow {
    pub fn new(label: Label, value: Value) -> Airflow {
        Airflow {
            label,
            value,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Label {
    #[serde(rename = "Front to rear")]
    FrontToRear,
    #[serde(rename = "Rear to front")]
    RearToFront,
    #[serde(rename = "Left to right")]
    LeftToRight,
    #[serde(rename = "Right to left")]
    RightToLeft,
    #[serde(rename = "Side to rear")]
    SideToRear,
    #[serde(rename = "Passive")]
    Passive,
    #[serde(rename = "Mixed")]
    Mixed,
}

impl Default for Label {
    fn default() -> Label {
        Self::FrontToRear
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "front-to-rear")]
    FrontToRear,
    #[serde(rename = "rear-to-front")]
    RearToFront,
    #[serde(rename = "left-to-right")]
    LeftToRight,
    #[serde(rename = "right-to-left")]
    RightToLeft,
    #[serde(rename = "side-to-rear")]
    SideToRear,
    #[serde(rename = "passive")]
    Passive,
    #[serde(rename = "mixed")]
    Mixed,
}

impl Default for Value {
    fn default() -> Value {
        Self::FrontToRear
    }
}

