/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// NestedFhrpGroup : Represents an object related through a ForeignKey field. On write, it accepts a primary key (PK) value or a dictionary of attributes which can be used to uniquely identify the related object. This class should be subclassed to return a full representation of the related object on read.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NestedFhrpGroup {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    /// * `vrrp2` - VRRPv2 * `vrrp3` - VRRPv3 * `carp` - CARP * `clusterxl` - ClusterXL * `hsrp` - HSRP * `glbp` - GLBP * `other` - Other
    #[serde(rename = "protocol")]
    pub protocol: Protocol,
    #[serde(rename = "group_id")]
    pub group_id: i32,
}

impl NestedFhrpGroup {
    /// Represents an object related through a ForeignKey field. On write, it accepts a primary key (PK) value or a dictionary of attributes which can be used to uniquely identify the related object. This class should be subclassed to return a full representation of the related object on read.
    pub fn new(id: i32, url: String, display: String, protocol: Protocol, group_id: i32) -> NestedFhrpGroup {
        NestedFhrpGroup {
            id,
            url,
            display,
            protocol,
            group_id,
        }
    }
}

/// * `vrrp2` - VRRPv2 * `vrrp3` - VRRPv3 * `carp` - CARP * `clusterxl` - ClusterXL * `hsrp` - HSRP * `glbp` - GLBP * `other` - Other
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Protocol {
    #[serde(rename = "vrrp2")]
    Vrrp2,
    #[serde(rename = "vrrp3")]
    Vrrp3,
    #[serde(rename = "carp")]
    Carp,
    #[serde(rename = "clusterxl")]
    Clusterxl,
    #[serde(rename = "hsrp")]
    Hsrp,
    #[serde(rename = "glbp")]
    Glbp,
    #[serde(rename = "other")]
    Other,
}

impl Default for Protocol {
    fn default() -> Protocol {
        Self::Vrrp2
    }
}

