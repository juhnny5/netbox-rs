/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NestedFhrpGroup {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "display", skip_serializing_if = "Option::is_none")]
    pub display: Option<String>,
    #[serde(rename = "protocol")]
    pub protocol: Protocol,
    #[serde(rename = "group_id")]
    pub group_id: i32,
}

impl NestedFhrpGroup {
    pub fn new(protocol: Protocol, group_id: i32) -> NestedFhrpGroup {
        NestedFhrpGroup {
            id: None,
            url: None,
            display: None,
            protocol,
            group_id,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Protocol {
    #[serde(rename = "vrrp2")]
    Vrrp2,
    #[serde(rename = "vrrp3")]
    Vrrp3,
    #[serde(rename = "carp")]
    Carp,
    #[serde(rename = "clusterxl")]
    Clusterxl,
    #[serde(rename = "hsrp")]
    Hsrp,
    #[serde(rename = "glbp")]
    Glbp,
    #[serde(rename = "other")]
    Other,
}

impl Default for Protocol {
    fn default() -> Protocol {
        Self::Vrrp2
    }
}

