/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// InterfaceTemplate : Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterfaceTemplate {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "device_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub device_type: Option<Option<Box<crate::models::NestedDeviceType>>>,
    #[serde(rename = "module_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub module_type: Option<Option<Box<crate::models::NestedModuleType>>>,
    /// {module} is accepted as a substitution for the module bay position when attached to a module type.
    #[serde(rename = "name")]
    pub name: String,
    /// Physical label
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "type")]
    pub r#type: Box<crate::models::InterfaceType>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "mgmt_only", skip_serializing_if = "Option::is_none")]
    pub mgmt_only: Option<bool>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "bridge", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bridge: Option<Option<Box<crate::models::NestedInterfaceTemplate>>>,
    #[serde(rename = "poe_mode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub poe_mode: Option<Option<Box<crate::models::InterfaceTemplatePoeMode>>>,
    #[serde(rename = "poe_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub poe_type: Option<Option<Box<crate::models::InterfaceTemplatePoeType>>>,
    #[serde(rename = "rf_role", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rf_role: Option<Option<Box<crate::models::InterfaceTemplateRfRole>>>,
    #[serde(rename = "created", deserialize_with = "Option::deserialize")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", deserialize_with = "Option::deserialize")]
    pub last_updated: Option<String>,
}

impl InterfaceTemplate {
    /// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
    pub fn new(id: i32, url: String, display: String, name: String, r#type: crate::models::InterfaceType, created: Option<String>, last_updated: Option<String>) -> InterfaceTemplate {
        InterfaceTemplate {
            id,
            url,
            display,
            device_type: None,
            module_type: None,
            name,
            label: None,
            r#type: Box::new(r#type),
            enabled: None,
            mgmt_only: None,
            description: None,
            bridge: None,
            poe_mode: None,
            poe_type: None,
            rf_role: None,
            created,
            last_updated,
        }
    }
}


