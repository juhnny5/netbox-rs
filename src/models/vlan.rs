/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Vlan : Adds support for custom fields and tags.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Vlan {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "site", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub site: Option<Option<Box<crate::models::NestedSite>>>,
    #[serde(rename = "group", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub group: Option<Option<Box<crate::models::NestedVlanGroup>>>,
    /// Numeric VLAN ID (1-4094)
    #[serde(rename = "vid")]
    pub vid: i32,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "tenant", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<Option<Box<crate::models::NestedTenant>>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::IpRangeStatus>>,
    #[serde(rename = "role", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub role: Option<Option<Box<crate::models::NestedRole>>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    #[serde(rename = "l2vpn_termination", deserialize_with = "Option::deserialize")]
    pub l2vpn_termination: Option<Box<crate::models::NestedL2VpnTermination>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::NestedTag>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "created", deserialize_with = "Option::deserialize")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", deserialize_with = "Option::deserialize")]
    pub last_updated: Option<String>,
    #[serde(rename = "prefix_count")]
    pub prefix_count: i32,
}

impl Vlan {
    /// Adds support for custom fields and tags.
    pub fn new(id: i32, url: String, display: String, vid: i32, name: String, l2vpn_termination: Option<crate::models::NestedL2VpnTermination>, created: Option<String>, last_updated: Option<String>, prefix_count: i32) -> Vlan {
        Vlan {
            id,
            url,
            display,
            site: None,
            group: None,
            vid,
            name,
            tenant: None,
            status: None,
            role: None,
            description: None,
            comments: None,
            l2vpn_termination: if let Some(x) = l2vpn_termination {Some(Box::new(x))} else {None},
            tags: None,
            custom_fields: None,
            created,
            last_updated,
            prefix_count,
        }
    }
}


