/*
 * NetBox REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0 (3.6)
 * 
 * Generated by: https://openapi-generator.tech
 */

/// NestedModule : Represents an object related through a ForeignKey field. On write, it accepts a primary key (PK) value or a dictionary of attributes which can be used to uniquely identify the related object. This class should be subclassed to return a full representation of the related object on read.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NestedModule {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "display")]
    pub display: String,
    #[serde(rename = "device")]
    pub device: Box<crate::models::NestedDevice>,
    #[serde(rename = "module_bay")]
    pub module_bay: Box<crate::models::ModuleNestedModuleBay>,
    #[serde(rename = "module_type")]
    pub module_type: Box<crate::models::NestedModuleType>,
}

impl NestedModule {
    /// Represents an object related through a ForeignKey field. On write, it accepts a primary key (PK) value or a dictionary of attributes which can be used to uniquely identify the related object. This class should be subclassed to return a full representation of the related object on read.
    pub fn new(id: i32, url: String, display: String, device: crate::models::NestedDevice, module_bay: crate::models::ModuleNestedModuleBay, module_type: crate::models::NestedModuleType) -> NestedModule {
        NestedModule {
            id,
            url,
            display,
            device: Box::new(device),
            module_bay: Box::new(module_bay),
            module_type: Box::new(module_type),
        }
    }
}


