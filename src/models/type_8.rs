/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Type8 {
    #[serde(rename = "label")]
    pub label: Label,
    #[serde(rename = "value")]
    pub value: Value,
}

impl Type8 {
    pub fn new(label: Label, value: Value) -> Type8 {
        Type8 {
            label,
            value,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Label {
    #[serde(rename = "VPWS")]
    Vpws,
    #[serde(rename = "VPLS")]
    Vpls,
    #[serde(rename = "VXLAN")]
    Vxlan,
    #[serde(rename = "VXLAN-EVPN")]
    VxlanEvpn,
    #[serde(rename = "MPLS EVPN")]
    MplsEvpn,
    #[serde(rename = "PBB EVPN")]
    PbbEvpn,
    #[serde(rename = "EPL")]
    Epl,
    #[serde(rename = "EVPL")]
    Evpl,
    #[serde(rename = "Ethernet Private LAN")]
    EthernetPrivateLan,
    #[serde(rename = "Ethernet Virtual Private LAN")]
    EthernetVirtualPrivateLan,
    #[serde(rename = "Ethernet Private Tree")]
    EthernetPrivateTree,
    #[serde(rename = "Ethernet Virtual Private Tree")]
    EthernetVirtualPrivateTree,
}

impl Default for Label {
    fn default() -> Label {
        Self::Vpws
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "vpws")]
    Vpws,
    #[serde(rename = "vpls")]
    Vpls,
    #[serde(rename = "vxlan")]
    Vxlan,
    #[serde(rename = "vxlan-evpn")]
    VxlanEvpn,
    #[serde(rename = "mpls-evpn")]
    MplsEvpn,
    #[serde(rename = "pbb-evpn")]
    PbbEvpn,
    #[serde(rename = "epl")]
    Epl,
    #[serde(rename = "evpl")]
    Evpl,
    #[serde(rename = "ep-lan")]
    EpLan,
    #[serde(rename = "evp-lan")]
    EvpLan,
    #[serde(rename = "ep-tree")]
    EpTree,
    #[serde(rename = "evp-tree")]
    EvpTree,
}

impl Default for Value {
    fn default() -> Value {
        Self::Vpws
    }
}

